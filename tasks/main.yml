---
# tasks file for cachenode
- name: Make sure that nodejs, yarn, gcc-c++ and make are installed
  zypper:
   name: "{{ item }}"
   state: "present"
  loop:
    - nodejs
    - gcc-c++
    - yarn
    - make
  when: ansible_distribution is search("SUSE")
- name: Make sure that nodejs, yarn, gcc-c++ and make are installed
  yum:
   name: "{{ item }}"
   state: "present"
  loop:
    - nodejs
    - gcc-c++
    - yarn
    - make
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
- name: Make sure that python-devel and gcc are installed
  apt:
   name: "{{ item }}"
   state: "present"
  loop:
    - nodejs
    - gcc-c++
    - yarn
    - make
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
- name: copy nodejs templates
  template:
     src: "{{ item.src }}"
     dest: "{{ item.dest }}"
     owner: root
     group: root
     mode: "{{ item.mode }}"
  loop:
     - { src: "templates/mgdbx.js", dest: "/tmp/mgdbx.js", mode: "0744" }
- name: Copy the package.json file
  copy:
    src: files/package.json
    dest: /tmp/package.json
- name: Install mg-dbx via yarn
  yarn:
    name: mg-dbx
    path: /tmp
- name: Verify that the install is working as expected
  command: "node mgdbx.js"
  args:
    chdir: "/tmp"
  register: outpt
  changed_when: outpt.stdout is not search("")
- name: Print whether the install has gone through or not
  debug: msg="npm package mg-dbx for Intersystem Cache connectivity, has been installed correctly"
  when: outpt.stdout is search("The value of subscript 1 in global Sample.PersonS in the SAMPLES namespace is 1")
- name: Print whether the install has gone through or not
  debug: msg="npm package mg-dbx for Intersystem Cache connectivity, has NOT been installed correctly"
  when: outpt.stdout is not search("The value of subscript 1 in global Sample.PersonS in the SAMPLES namespace is 1")
