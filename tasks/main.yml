---
# tasks file for cachenode
- name: Make sure python-xml is installed to allow for yum and zypper to run through Ansible
  command: 'zypper install -y python-xml'
  when: ansible_distribution is search("SUSE")
  tags:
    - skip_ansible_lint # Need to install python-xml to get Ansible zypper/yum module to work - Chicken and egg!!
- name: Make sure python-xml is installed to allow for yum and zypper to run through Ansible
  command: 'yum install -y python-xml'
  when: ansible_distribution is not search("SUSE")
  tags:
    - skip_ansible_lint # Need to install python-xml to get Ansible zypper/yum module to work - Chicken and egg!!
- name: Make sure that nodejs and gcc-c++ are installed
  zypper:
   name: "{{ item }}"
   state: "present"
  loop:
    - nodejs
    - gcc-c++
  when: ansible_distribution is search("SUSE")
- name: Make sure that nodejs and gcc-c++ are installed
  yum:
   name: "{{ item }}"
   state: "present"
  loop:
    - nodejs
    - gcc-c++
  when: ansible_distribution is not search("SUSE")
- name: copy nodejs templates
  template:
     src: "{{ item.src }}"
     dest: "{{ item.dest }}"
     owner: root
     group: root
     mode: "{{ item.mode }}"
  loop:
     - { src: "templates/mgdbx.js", dest: "/tmp/mgdbx.js", mode: "0744" }
- name: Install mg-dbx via npm
  npm:
    name: mg-dbx
    path: /tmp

- name: Verify that the install is working as expected
  command: "node mgdbx.js"
  args:
    chdir: "/tmp"
  register: outpt
  changed_when: outpt.stdout is not search("")
- name: Print whether the install has gone through or not
  debug: msg="npm package mg-dbx for Intersystem Cache connectivity, has been install correctly"
  when: outpt.stdout is search("The value of subscript 1 in global Sample.PersonS in the SAMPLES namespace is 1")
